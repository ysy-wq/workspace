{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport axios from 'axios';\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: {}\n    };\n  }\n\n  async componentDidMount() {\n    const that = this;\n    await axios.get('http://localhost:8090/mockData').then(res => that.setState({\n      dataSource: res.data.dataSource\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state; // return (\n    //   dataSource?.arr?.map(item => {\n    //     return <h2>{item}</h2>\n    //   })\n    // )\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/work-space/practice/react/mock-app/src/App.js"],"names":["React","PureComponent","axios","App","constructor","props","state","dataSource","componentDidMount","that","get","then","res","setState","data","catch","err","console","log","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBF,aAAlB,CAAgC;AAC7CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAKD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAMC,IAAI,GAAG,IAAb;AACA,UAAMP,KAAK,CAACQ,GAAN,CAAU,gCAAV,EACHC,IADG,CACEC,GAAG,IAAIH,IAAI,CAACI,QAAL,CAAc;AACzBN,MAAAA,UAAU,EAAEK,GAAG,CAACE,IAAJ,CAASP;AADI,KAAd,CADT,EAIHQ,KAJG,CAIGC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJV,CAAN;AAKD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAiB,KAAKD,KAA5B,CADO,CAEP;AACA;AACA;AACA;AACA;AACD;;AA1B4C","sourcesContent":["import React, { PureComponent } from 'react'\nimport axios from 'axios'\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: {\n        \n      }\n    }\n  }\n\n  async componentDidMount() {\n    const that = this;\n    await axios.get('http://localhost:8090/mockData')\n      .then(res => that.setState({\n        dataSource: res.data.dataSource\n      }))\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    const { dataSource } = this.state;\n    // return (\n    //   dataSource?.arr?.map(item => {\n    //     return <h2>{item}</h2>\n    //   })\n    // )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}